spring.application.name=myfinances-client
server.port=8190
server.servlet.context-path=/my-finances

# eureka
eureka.client.service-url.defaultZone=${EUREKA_URI:http://${eureka.username}:${eureka.password}@localhost:8761/eureka}
eureka.client.instance.preferIpAddress=true

# liquibase
changeLogFile=classpath:/db/changelog/db.changelog-master.xml

# config server
spring.config.import=optional:configserver:http://localhost:8888
spring.cloud.config.username=configuser
spring.cloud.config.password=configsecretpsw
spring.profiles.active=dev
spring.cloud.config.fail-fast=true
spring.cloud.config.retry.initial-interval=1000
spring.cloud.config.retry.multiplier=1.1
spring.cloud.config.retry.max-interval=6000
spring.cloud.config.retry.max-attempts=6

# dataSource
spring.datasource.url=${datasource.url}
spring.datasource.username=${jdbc.username}
spring.datasource.password=${datasource.password}

# Keycloak auth server
#keycloak.auth-server-url=http://localhost:8080/auth
#keycloak.realm=MyFinancesAuthentication
#keycloak.resource=myfinances
#keycloak.public-client=false
#keycloak.enable-basic-auth=true
#keycloak.credentials.secret=b128ab37-fcf3-4d0a-a2bb-81353f8115a9
#keycloak.ssl-required=all
# get user username from principal.getName() - preferred_username, id - name
#keycloak.principal-attribute=name

# auth server provider
#spring.security.oauth2.client.provider.keycloak.issuer-uri=${realms.auth.addr}/${realm.auth.name}
# uri for authorization in the first place
oidc.auth.path=/protocol/openid-connect/auth
oidc.token.path=/protocol/openid-connect/token
oidc.certs.path=/protocol/openid-connect/certs
oidc.userinfo.path=/protocol/openid-connect/userinfo

spring.security.oauth2.client.provider.keycloak.authorization-uri=${realms.auth.addr}/${realm.auth.name}${oidc.auth.path}
spring.security.oauth2.client.provider.keycloak.token-uri=${realms.auth.addr}/${realm.auth.name}${oidc.token.path}
spring.security.oauth2.client.provider.keycloak.user-info-uri=${realms.auth.addr}/${realm.auth.name}${oidc.userinfo.path}
spring.security.oauth2.client.provider.keycloak.jwk-set-uri: ${realms.auth.addr}/${realm.auth.name}${oidc.certs.path}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=user_name

auth.client.name=${spring.application.name}
spring.security.oauth2.client.registration.myfinances-client.provider=keycloak
spring.security.oauth2.client.registration.myfinances-client.client-id=myfinances
spring.security.oauth2.client.registration.myfinances-client.client-secret=b128ab37-fcf3-4d0a-a2bb-81353f8115a9
spring.security.oauth2.client.registration.myfinances-client.scope=openid,read,write
spring.security.oauth2.client.registration.myfinances-client.authorization-grant-type=authorization_code
# uri to redirect to keyCloak registration page
spring.security.oauth2.client.registration.myfinances-client.redirect-uri=http://localhost:8190/my-finances/login/oauth2/code/myfinances-client

thymeleaf.cache=false

# logging
logging.level.com.chalova.irina.myfinances.commons_service=TRACE
logging.level.org.springframework=TRACE
